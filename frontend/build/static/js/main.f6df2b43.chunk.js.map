{"version":3,"sources":["Pages/Profile/Login.tsx","Components/Nav.tsx","Pages/Home.tsx","Pages/Profile/Register.tsx","Pages/Tracks/TrackDetail.tsx","Pages/Tracks/TrackList.tsx","Pages/Profile/Profile.tsx","Pages/Genres/GenreList.tsx","Pages/Genres/GenreDetail.tsx","Pages/Playlists/PlaylistList.tsx","Pages/Playlists/PlaylistDetail.tsx","Pages/Albums/AlbumList.tsx","Pages/Albums/AlbumDetail.tsx","Pages/Artists/ArtistList.tsx","Pages/Artists/ArtistDetail.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Alert","props","elevation","variant","Login","useState","email","setEmail","password","setPassword","open","setOpen","redirect","setRedirect","submit","e","a","preventDefault","headers","Cookies","get","fetch","method","credentials","body","JSON","stringify","response","json","content","detail","setUsername","username","to","onSubmit","Helmet","Input","autoFocus","onChange","target","value","placeholder","required","type","Button","color","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","useStyles","makeStyles","theme","menuButton","marginRight","spacing","title","textDecoration","cursor","lineHeight","flexGrow","Nav","menu","logout","axios","withCredentials","Box","mr","component","Link","onClick","classes","AppBar","position","Container","fixed","Toolbar","Typography","className","createStyles","root","marginTop","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","item","marginBottom","img","tile","height","gridList","paddingTop","transform","overflowX","titleBar","Home","tracks","setTracks","playlists","setPlaylists","albums","setAlbums","artists","setArtists","useEffect","response1","data","response2","response3","response4","fetchData","GridList","cols","map","track","imgSrc","cover","GridListTile","id","src","alt","GridListTileBar","playlist","photo","name","album","artist","nickname","Register","psw2","setPsw2","errMsg","setErrMsg","length","toString","trackInfo","flexDirection","trackImageDiv","trackImage","objectFit","width","container","trackDescription","flexBasis","marginLeft","TrackDetail","trackId","match","params","setData","artists_ids","trackSrc","soundtrack","Grid","xs","date_of_release","artists_info","genres_info","genre","controls","mainContent","padding","paddingBottom","media","TrackList","console","log","maxWidth","align","gutterBottom","paragraph","trackHref","sm","md","Card","CardActionArea","CardMedia","image","CardContent","CardActions","size","Profile","avatar","date_joined","avatarLink","setAvatarLink","status","split","GenreList","readOnly","description","GenreDetail","genreId","iter","PlaylistList","PlaylistDetail","playlistId","playNext","now","document","getElementById","cur","getAttribute","setAttribute","Number","next","first","soundtrackSrc","onEnded","AlbumList","AlbumDetail","albumId","tracks_info","imgTrackSrc","ArtistList","first_name","last_name","ArtistDetail","artistId","date_of_birth","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f6df2b43.chunk.js","sourcesContent":["import React, {SyntheticEvent, useState} from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Input, Button, Snackbar} from '@material-ui/core';\r\nimport Cookies from 'js-cookie'\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { Helmet } from 'react-helmet'\r\n\r\nfunction Alert(props: any) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst Login = (props: { setUsername: (username: any) => void}) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [open, setOpen] = useState(false)\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    const handleClose: any = (e: SyntheticEvent) => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const submit = async (e: SyntheticEvent) => {\r\n        e.preventDefault();\r\n\r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n            'X-CSRFToken': '' + Cookies.get('csrftoken')\r\n        }\r\n        const response = await fetch('http://localhost:8000/user/login', {\r\n            method: 'POST',\r\n            headers: headers,\r\n            credentials: 'include',\r\n            body: JSON.stringify({\r\n                email,\r\n                password\r\n            })\r\n        });\r\n\r\n        const content = await response.json()\r\n\r\n        if (content.detail !== 'Incorrect password' && content.detail !== 'User not found') {\r\n            setRedirect(true);\r\n            await props.setUsername(content.username)\r\n        } else {\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n    if (redirect) {\r\n        return <Redirect to=\"/\"/>;\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submit}>\r\n            <Helmet><title>Авторизация</title></Helmet>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <Input autoFocus={true} onChange={e => setEmail(e.target.value)} placeholder=\"Email\" required\r\n                   type=\"email\"/><br/><br/>\r\n            <Input onChange={e => setPassword(e.target.value)} placeholder=\"Password\" required\r\n                   type=\"password\"/><br/><br/>\r\n            <Button type=\"submit\" color=\"primary\" variant=\"outlined\">Log in</Button>\r\n            <Snackbar anchorOrigin={{vertical: 'top', horizontal: 'left'}}\r\n                      open={open} autoHideDuration={5000} onClose={handleClose}>\r\n                <Alert severity=\"error\">Неверная связка логин/пароль</Alert>\r\n            </Snackbar>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AppBar, Container, Toolbar, Typography, Box, Button } from '@material-ui/core'\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    menuButton: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        textDecoration: 'none',\r\n        cursor: 'pointer',\r\n        lineHeight: 1,\r\n        \"&:hover\": {\r\n            color: 'white',\r\n            textDecoration: 'underline',\r\n        },\r\n        flexGrow: 1,\r\n    }\r\n}))\r\n\r\nconst Nav = (props: { setUsername: (username: any) => void, username: any }) => {\r\n    const logout = async () => {\r\n        await axios('http://localhost:8000/user/logout', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json', 'X-CSRFToken': '' + Cookies.get('csrftoken') },\r\n            withCredentials: true\r\n        })\r\n        await props.setUsername('')\r\n    }\r\n\r\n    let menu;\r\n\r\n\r\n    if (props.username === '') {\r\n        menu = (\r\n            <>\r\n                <Box mr={3}>\r\n                    <Button color=\"inherit\" variant=\"outlined\" component={Link} to='/login/'>Войти</Button>\r\n                </Box>\r\n                <Button color=\"secondary\" variant=\"contained\" component={Link} to='/register/'>Зарегистрироваться</Button>\r\n            </>\r\n        )\r\n    } else {\r\n        menu = (\r\n            <>\r\n                <Box mr={3}>\r\n                    <Button color=\"inherit\" variant=\"outlined\" component={Link} to='/profile/'>Профиль</Button>\r\n                </Box>\r\n                <Button color=\"secondary\" variant=\"contained\" onClick={logout} component={Link} to='/'>Выйти</Button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <AppBar position=\"fixed\">\r\n            <Container fixed>\r\n                <Toolbar>\r\n                    <Typography variant=\"h4\" className={classes.title} component={Link} to='/'><strong>Musicality</strong></Typography>\r\n                    <Typography variant=\"h6\" className={classes.title} component={Link} to='/tracks/'>Треки</Typography>\r\n                    <Typography variant=\"h6\" className={classes.title} component={Link} to='/genres/'>Жанры</Typography>\r\n                    <Typography variant=\"h6\" className={classes.title} component={Link} to='/playlists/'>Плейлисты</Typography>\r\n                    <Typography variant=\"h6\" className={classes.title} component={Link} to='/albums/'>Альбомы</Typography>\r\n                    <Typography variant=\"h6\" className={classes.title} component={Link} to='/artists/'>Исполнители</Typography>\r\n\r\n                    {menu}\r\n\r\n                </Toolbar>\r\n            </Container>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default Nav;","import React, { useEffect, useState } from 'react';\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { GridList, GridListTile, GridListTileBar } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom'\r\nimport { Helmet } from 'react-helmet'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            marginTop: '100px',\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-around',\r\n            overflow: 'hidden',\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        item: {\r\n            marginBottom: '70px',\r\n        },\r\n        img: {\r\n            // objectFit: 'cover',\r\n        },\r\n        tile: {\r\n            height: '300px !important',\r\n        },\r\n        gridList: {\r\n            paddingTop: '20px',\r\n            flexWrap: 'nowrap',\r\n            transform: 'translateZ(0)',\r\n            overflowX: 'scroll',\r\n        },\r\n        title: {\r\n            color: 'white',\r\n        },\r\n        titleBar: {\r\n            background:\r\n                'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n        },\r\n    }),\r\n);\r\n\r\nconst Home = () => {\r\n    const [tracks, setTracks]: any[] = useState([])\r\n    const [playlists, setPlaylists]: any[] = useState([])\r\n    const [albums, setAlbums]: any[] = useState([])\r\n    const [artists, setArtists]: any[] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response1 = await axios(\r\n                `http://localhost:8000/api/tracks/`, {\r\n                headers: { 'Content-Type': 'application/json' },\r\n                withCredentials: true\r\n            }\r\n            )\r\n            await setTracks(response1.data)\r\n\r\n            const response2 = await axios(\r\n                `http://localhost:8000/api/playlists/`, {\r\n                headers: { 'Content-Type': 'application/json' },\r\n                withCredentials: true\r\n            }\r\n            )\r\n            await setPlaylists(response2.data)\r\n\r\n            const response3 = await axios(\r\n                `http://localhost:8000/api/albums/`, {\r\n                headers: { 'Content-Type': 'application/json' },\r\n                withCredentials: true\r\n            }\r\n            )\r\n            await setAlbums(response3.data)\r\n\r\n            const response4 = await axios(\r\n                `http://localhost:8000/api/artists/`, {\r\n                headers: { 'Content-Type': 'application/json' },\r\n                withCredentials: true\r\n            }\r\n            )\r\n            await setArtists(response4.data)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    interface obj {\r\n        id: number,\r\n        title: string,\r\n        cover: string,\r\n    }\r\n\r\n    interface pla {\r\n        id: number,\r\n        name: string,\r\n        photo: string,\r\n    }\r\n\r\n    interface alb {\r\n        id: number,\r\n        name: string,\r\n        cover: string,\r\n    }\r\n\r\n    interface art {\r\n        id: number,\r\n        nickname: string,\r\n        photo: string,\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    if (typeof (tracks) !== 'undefined') {\r\n        return (\r\n            <>\r\n                <Helmet>\r\n                    <title>Главная страница</title>\r\n                </Helmet>\r\n                <div className={classes.root}>\r\n                    <div className={classes.item}>\r\n                        Популярные треки:\r\n                        <GridList className={classes.gridList} cols={3.5}>\r\n                            {tracks.map((track: obj) => {\r\n                                // Production\r\n                                let imgSrc = track.cover\r\n                                // Development\r\n                                // let imgSrc = 'http://localhost:8000' + track.cover\r\n                                return (\r\n                                    <GridListTile className={classes.tile} component={Link} to={'/track/' + track.id} key={track.id}>\r\n                                        <img src={imgSrc} alt={track.title} />\r\n                                        <GridListTileBar\r\n                                            title={track.title}\r\n                                            classes={{\r\n                                                root: classes.titleBar,\r\n                                                title: classes.title,\r\n                                            }}\r\n                                        />\r\n                                    </GridListTile>\r\n                                )\r\n                            })}\r\n                        </GridList>\r\n                    </div>\r\n\r\n                    <div className={classes.item}>\r\n                        Популярные плейлисты: <br /><br />\r\n                        <GridList className={classes.gridList} cols={3.5}>\r\n                            {playlists.map((playlist: pla) => {\r\n                                // Production\r\n                                let imgSrc = playlist.photo\r\n                                // Development\r\n                                // let imgSrc = 'http://localhost:8000' + playlist.photo\r\n\r\n                                return (\r\n                                    <GridListTile className={classes.tile} component={Link} to={'/playlist/' + playlist.id} key={playlist.id}>\r\n                                        <img src={imgSrc} alt={playlist.name} />\r\n                                        <GridListTileBar\r\n                                            title={playlist.name}\r\n                                            classes={{\r\n                                                root: classes.titleBar,\r\n                                                title: classes.title,\r\n                                            }}\r\n                                        />\r\n                                    </GridListTile>\r\n                                )\r\n                            })}\r\n                        </GridList>\r\n                    </div>\r\n\r\n                    <div className={classes.item}>\r\n                        Популярные альбомы: <br /><br />\r\n                        <GridList className={classes.gridList} cols={3.5}>\r\n                            {albums.map((album: alb) => {\r\n                                // Production\r\n                                let imgSrc = album.cover\r\n                                // Development\r\n                                // let imgSrc = 'http://localhost:8000' + album.cover\r\n                                return (\r\n                                    <GridListTile className={classes.tile} component={Link} to={'/album/' + album.id} key={album.id}>\r\n                                        <img src={imgSrc} alt={album.name} />\r\n                                        <GridListTileBar\r\n                                            title={album.name}\r\n                                            classes={{\r\n                                                root: classes.titleBar,\r\n                                                title: classes.title,\r\n                                            }}\r\n                                        />\r\n                                    </GridListTile>\r\n                                )\r\n                            })}\r\n                        </GridList>\r\n                    </div>\r\n\r\n                    <div className={classes.item}>\r\n                        Популярные артисты: <br /><br />\r\n                        <GridList className={classes.gridList} cols={3.5}>\r\n                            {artists.map((artist: art) => {\r\n                                // Production\r\n                                let imgSrc = artist.photo\r\n                                // Development\r\n                                // let imgSrc = 'http://localhost:8000' + artist.photo\r\n\r\n                                return (\r\n                                    <GridListTile className={classes.tile} component={Link} to={'/artist/' + artist.id} key={artist.id}>\r\n                                        <img src={imgSrc} alt={artist.nickname} />\r\n                                        <GridListTileBar\r\n                                            title={artist.nickname}\r\n                                            classes={{\r\n                                                root: classes.titleBar,\r\n                                                title: classes.title,\r\n                                            }}\r\n                                        />\r\n                                    </GridListTile>\r\n                                )\r\n                            })}\r\n                        </GridList>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    } else {\r\n        return (<div><br /><br /><br /><br /><h1>Hello</h1></div>)\r\n    }\r\n};\r\n\r\nexport default Home;","import React, { SyntheticEvent, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Button, Input, Snackbar } from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { Helmet } from 'react-helmet'\r\n\r\nfunction Alert(props: any) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst Register = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('')\r\n    const [psw2, setPsw2] = useState('')\r\n    const [open, setOpen] = useState(false)\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n    const handleClose: any = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    const [errMsg, setErrMsg] = useState('')\r\n\r\n    const submit = async (e: SyntheticEvent) => {\r\n        e.preventDefault();\r\n        if (password.length < 8) {\r\n            setErrMsg('Пароль слишком короткий')\r\n            setOpen(true)\r\n        }\r\n        else if (password === psw2) {\r\n            const response = await fetch('http://localhost:8000/user/register', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    email, username, password\r\n                })\r\n            })\r\n\r\n            interface obj {\r\n                id: any,\r\n                email: string[],\r\n                username: string[],\r\n                detail: string\r\n            }\r\n\r\n            const content: obj = await response.json()\r\n\r\n            if (typeof (content.id) !== 'undefined') {\r\n                await setErrMsg('')\r\n                setRedirect(true)\r\n            }\r\n            else if (typeof (content.email) !== 'undefined') {\r\n                if (content.email.toString() === 'Пользователь с таким Email уже существует.') {\r\n                    await setErrMsg(content.email.toString())\r\n                    setOpen(true)\r\n                } else {\r\n                    setErrMsg('')\r\n                }\r\n            }\r\n            else if (typeof (content.username) !== 'undefined') {\r\n                if (content.username.toString() === 'Пользователь с таким Username уже существует.') {\r\n                    await setErrMsg(content.username.toString())\r\n                    setOpen(true)\r\n                }\r\n            }\r\n        } else {\r\n            setErrMsg('Пароли не совпадают')\r\n            setOpen(true)\r\n        }\r\n    }\r\n\r\n\r\n    if (redirect) return <Redirect to='/login' />\r\n\r\n\r\n    return (\r\n        <form onSubmit={submit}>\r\n            <Helmet><title>Регистрация</title></Helmet>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <Input autoFocus={true} onChange={e => setEmail(e.target.value)} placeholder=\"Email\" required\r\n                type=\"email\" /><br /><br />\r\n            <Input onChange={e => setUsername(e.target.value)} placeholder=\"Username\" required type=\"text\" /><br /><br />\r\n            <Input onChange={e => setPassword(e.target.value)} placeholder=\"Password\" required\r\n                type=\"password\" /><br /><br />\r\n            <Input onChange={e => setPsw2(e.target.value)} placeholder=\"Password\" required\r\n                type=\"password\" /><br /><br />\r\n            <Button type=\"submit\" color=\"primary\" variant=\"outlined\">Register</Button>\r\n            <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n                open={open} autoHideDuration={5000} onClose={handleClose}>\r\n                <Alert severity=\"error\">{errMsg}</Alert>\r\n            </Snackbar>\r\n        </form>\r\n    );\r\n}\r\n    ;\r\n\r\nexport default Register;","import React, { useEffect, useState } from 'react';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    trackInfo: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-evenly',\r\n        paddingTop: theme.spacing(3),\r\n    },\r\n    trackImageDiv: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    trackImage: {\r\n        objectFit: 'cover',\r\n        height: theme.spacing(44),\r\n        width: theme.spacing(44),\r\n    },\r\n    container: {\r\n        marginTop: theme.spacing(8),\r\n    },\r\n    trackDescription: {\r\n        flexBasis: '30%',\r\n        marginLeft: '252px',\r\n    },\r\n}))\r\n\r\nconst TrackDetail = (props: any) => {\r\n    const trackId = props.match.params.trackId;\r\n\r\n    interface gen {\r\n        id: number,\r\n        name: string\r\n    }\r\n\r\n    interface art {\r\n        id: number,\r\n        nickname: string,\r\n        first_name: string,\r\n        last_name: string,\r\n        photo: string,\r\n    }\r\n\r\n\r\n    interface obj {\r\n        id: number,\r\n        title: string,\r\n        soundtrack: string,\r\n        cover: string,\r\n        date_of_release: string,\r\n        artists_info: art[],\r\n        genres_info: gen[]\r\n    }\r\n\r\n    const [data, setData] = useState<obj>()\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response1 = await axios(\r\n                'http://localhost:8000/api/track/' + trackId, {\r\n                headers: { 'Content-Type': 'application/json' },\r\n                withCredentials: true\r\n            }\r\n            )\r\n\r\n            await setData(response1.data)\r\n            response1.data.artists_ids = []\r\n            response1.data.artists_ids = response1.data.artists\r\n        }\r\n        fetchData()\r\n    }, [trackId])\r\n\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    if (typeof (data) !== 'undefined') {\r\n        // production\r\n        // let imgSrc = data.cover\r\n        // let trackSrc = data.soundtrack\r\n\r\n        // development\r\n        let imgSrc = 'http://localhost:8000' + data.cover\r\n        let trackSrc = 'http://localhost:8000' + data.soundtrack\r\n\r\n        return (\r\n            <Grid container spacing={3} className={classes.container}>\r\n                <Helmet><title>Трек: {data.title}</title></Helmet>\r\n                <br /><br /><br />\r\n                <Grid item xs={6} className={classes.trackImageDiv}>\r\n                    <img className={classes.trackImage} src={imgSrc} alt={data.title} />\r\n                </Grid>\r\n                <Grid item xs={6} className={classes.trackInfo}>\r\n                    <Grid item>\r\n                        Название трека: {data.title}\r\n                    </Grid>\r\n                    <Grid item>\r\n                        Дата выхода: {data.date_of_release}\r\n                    </Grid>\r\n                    <Grid item>\r\n                        Артисты: {data.artists_info.map((artist: art) => {\r\n                            return <span key={artist.id}>\r\n                                <Link to={'/artist/' + artist.id.toString()}>{artist.nickname}</Link>&nbsp;\r\n                            </span>\r\n                        })}\r\n                    </Grid>\r\n                    <Grid item>\r\n                        Жанры: {data.genres_info.map((genre: gen) => {\r\n                            return <span key={genre.id}>\r\n                                <Link to={'/genre/' + genre.id.toString()}>{genre.name}</Link>&nbsp;\r\n                            </span>\r\n                        })}\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <ReactAudioPlayer src={trackSrc} controls />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={4} className={classes.trackDescription}>\r\n                    Lorem ipsum dolor sit amet consectetur, adipisicing elit. Ut a veniam incidunt ipsa sequi laborum animi velit\r\n                    exercitationem facere excepturi, consequuntur id vitae quasi labore aut, aperiam nisi sapiente ex quidem.\r\n                    Eveniet accusamus quasi harum? Suscipit laudantium commodi distinctio ea esse? Deserunt, iusto culpa vel\r\n                    dolorum error qui! Mollitia, rerum!\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    } else {\r\n        return (<div></div>)\r\n    }\r\n};\r\n\r\nexport default TrackDetail;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Card, Grid, CardActions, CardMedia, CardActionArea, CardContent, Typography, Button } from '@material-ui/core';\r\nimport { Helmet } from 'react-helmet'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainContent: {\r\n        marginTop: theme.spacing(3),\r\n        padding: theme.spacing(6),\r\n        paddingBottom: theme.spacing(3)\r\n    },\r\n    media: {\r\n        paddingTop: \"75%\",\r\n    },\r\n}))\r\n\r\nconst TrackList = () => {\r\n    const [data, setData]: any[] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response1 = await axios(\r\n                `http://localhost:8000/api/tracks`, {\r\n                headers: { 'Content-Type': 'application/json' },\r\n                withCredentials: true\r\n            }\r\n            )\r\n            await setData(response1.data)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    console.log(data);\r\n\r\n    interface art {\r\n        id: number,\r\n        nickname: string,\r\n        first_name: string,\r\n        last_name: string,\r\n        photo: string,\r\n    }\r\n\r\n    interface obj {\r\n        id: number,\r\n        title: string,\r\n        cover: string,\r\n        artists_info: art[]\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <main>\r\n            <Helmet><title>Треки</title></Helmet>\r\n            <div className={classes.mainContent}>\r\n                <Container maxWidth=\"md\">\r\n                    <Typography variant=\"h1\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                        Аудиотреки\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n                        На этой странице вы можете просмотреть все треки, доступные в нашей библиотеке на данный момент\r\n                    </Typography>\r\n                </Container>\r\n            </div>\r\n            <Container maxWidth=\"md\" >\r\n                <Grid container spacing={4}>\r\n                    {data.map((item: obj) => {\r\n\r\n                        let trackHref = '/track/' + item.id\r\n\r\n                        // production\r\n                        // let imgSrc = item.cover\r\n\r\n                        // development\r\n                        let imgSrc = 'http://localhost:8000' + item.cover\r\n\r\n                        return (\r\n                            <Grid item key={item.id} xs={12} sm={6} md={4}>\r\n                                <Card>\r\n                                    <CardActionArea>\r\n                                        <CardMedia\r\n                                            className={classes.media}\r\n                                            image={imgSrc}\r\n                                            title={item.title}\r\n                                        />\r\n                                        <CardContent>\r\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                {item.title}\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" component=\"h5\">\r\n                                                Исполнители: {item.artists_info.map((artist: art) => {\r\n                                                    return (\r\n                                                        <span key={artist.id}>\r\n                                                            <Link to={'/artist/' + artist.id.toString()} key={artist.id}>\r\n                                                                {artist.nickname}\r\n                                                            </Link>&nbsp;\r\n                                                        </span>\r\n                                                    )\r\n                                                })}\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                                Тут будет описание трека\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                    </CardActionArea>\r\n                                    <CardActions>\r\n                                        <Button size=\"medium\" color=\"primary\" component={Link} to={trackHref}>\r\n                                            Перейти на страницу трека\r\n                                        </Button>\r\n                                    </CardActions>\r\n                                </Card>\r\n                            </Grid>\r\n                        )\r\n\r\n                    })\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n        </main>\r\n    )\r\n}\r\n\r\n\r\nexport default TrackList;","import React, { useState, useEffect } from 'react';\r\nimport { Helmet } from 'react-helmet'\r\n\r\ninterface datas {\r\n    id: any,\r\n    email: string,\r\n    username: string,\r\n    avatar: any,\r\n    date_joined: string,\r\n}\r\n\r\nconst Profile = () => {\r\n    const [data, setData] = useState<datas>({ id: '', email: '', username: '', avatar: '', date_joined: '', })\r\n    const [avatarLink, setAvatarLink]: any = useState('')\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response1 = await fetch(\r\n                'http://localhost:8000/user/profile', {\r\n                headers: { 'Content-Type': 'application/json' },\r\n                credentials: 'include'\r\n            }\r\n            )\r\n            const content = await response1.json()\r\n\r\n            if (response1.status === 200) {\r\n                await setData(content)\r\n                if (typeof (data.avatar) !== 'object') {\r\n                    // production\r\n                    await setAvatarLink(data.avatar)\r\n\r\n                    // development\r\n                    // let link = \"http://localhost:8000/\" + data.avatar\r\n                    // await setAvatarLink(link)\r\n                } else {\r\n                    // production\r\n                    await setAvatarLink('/media/images/users_avatars/d1zero.jpg')\r\n\r\n                    // development\r\n                    // let link = \"http://localhost:8000/media/images/users_avatars/d1zero.jpg\"\r\n                    // await setAvatarLink(link)\r\n                }\r\n            } else {\r\n                console.log(222)\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [data.date_joined, data.avatar])\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {data.id ?\r\n                <div>\r\n                    <Helmet><title>Профиль</title></Helmet>\r\n                    Никнейм: {data.username}<br />\r\n                    Email: {data.email}<br />\r\n                    Аватар профиля: <img src={avatarLink} alt={data.username} /><br />\r\n                    Дата регистрации: {data.date_joined.split('T')[0].toString()}\r\n                </div>\r\n                : <h1>Вы не авторизованы</h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n}))\r\n\r\nconst GenreList = () => {\r\n    const [data, setData]: any[] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response1 = await axios(\r\n                `http://localhost:8000/api/genres/`, {\r\n                headers: { 'Content-Type': 'application/json' },\r\n                withCredentials: true\r\n            }\r\n            )\r\n\r\n            await setData(response1.data)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    interface obj {\r\n        id: number,\r\n        name: string,\r\n        description: string,\r\n    }\r\n\r\n    // const classes = useStyles()\r\n\r\n    return (\r\n        <div>\r\n            <Helmet><title>Жанры</title></Helmet>\r\n            <br /><br /><br /><br />\r\n            <h1>Все жанры</h1>\r\n            <ol>\r\n                {data.map((genre: obj) => {\r\n                    console.log(genre);\r\n                    return (\r\n                        <li key={genre.id}>\r\n                            <h2><Link to={\"/genre/\" + genre.id}>{genre.name}</Link></h2>\r\n                            <textarea readOnly>{genre.description}</textarea>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GenreList;","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n}))\r\n\r\ninterface track {\r\n    id: number,\r\n    title: string\r\n}\r\n\r\ninterface genre {\r\n    id: number,\r\n    tracks: track[],\r\n    name: string,\r\n    description: string,\r\n}\r\n\r\nconst GenreDetail = (props: any) => {\r\n    const genreId = props.match.params.genreId;\r\n    const [data, setData] = useState<genre>({\r\n        id: 0, name: '', description: '', tracks: [\r\n            { id: 0, title: '' },\r\n            { id: 0, title: '' },\r\n            { id: 0, title: '' }\r\n        ]\r\n    })\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response1 = await axios(\r\n                'http://localhost:8000/api/genres/' + genreId, {\r\n                headers: { 'Content-Type': 'application/json' },\r\n                withCredentials: true\r\n            }\r\n            )\r\n            await setData(response1.data)\r\n        }\r\n        fetchData()\r\n    }, [genreId])\r\n\r\n\r\n    var iter = 0\r\n\r\n    // const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Helmet><title>Жанры: {data.name}</title></Helmet>\r\n            <br /><br /><br /><br />\r\n            <h1>{data.name}</h1><br />\r\n            {data.description}<br />\r\n            {data.tracks.map((trackId: track) => {\r\n                iter += 1;\r\n                return (\r\n                    <div key={iter}>\r\n                        <Link to={'/track/' + trackId.id}>{data.tracks[iter - 1].title}</Link><br />\r\n                    </div>\r\n                )\r\n            })}<br />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GenreDetail;","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst PlaylistList = () => {\r\n    const [data, setData]: any[] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response1 = await axios(\r\n                `http://localhost:8000/api/playlists/`, {\r\n                headers: { 'Content-Type': 'application/json' },\r\n                withCredentials: true\r\n            }\r\n            )\r\n            await setData(response1.data)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    console.log(data);\r\n\r\n    interface obj {\r\n        id: number,\r\n        name: string,\r\n        description: string,\r\n        photo: string,\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Helmet><title>Плейлисты</title></Helmet>\r\n            <br /><br /><br /><br />\r\n            <h1>Playlists</h1>\r\n            {data.map((playlist: obj) => {\r\n                // production\r\n                let imgSrc = playlist.photo\r\n\r\n                // development\r\n                // let imgSrc = 'http://localhost:8000' + playlist.photo\r\n                return (\r\n                    <div key={playlist.id}>\r\n                        <Link to={'/playlist/' + playlist.id}>{playlist.name}</Link><br />\r\n                        {playlist.description}<br />\r\n                        <img src={imgSrc} alt={playlist.name} />\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaylistList","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\nimport { Helmet } from 'react-helmet'\r\n\r\ninterface track {\r\n    id: number,\r\n    title: string,\r\n    cover: string,\r\n    soundtrack: string,\r\n}\r\n\r\ninterface playlist {\r\n    id: number,\r\n    name: string,\r\n    description: string,\r\n    photo: string,\r\n    tracks: track[],\r\n}\r\n\r\nconst PlaylistDetail = (props: any) => {\r\n    const playlistId = props.match.params.playlistId;\r\n    const [data, setData] = useState<playlist>({ id: 0, name: '', description: '', photo: '', tracks: [] })\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response1 = await axios(\r\n                'http://localhost:8000/api/playlists/' + playlistId, {\r\n                headers: { 'Content-Type': 'application/json' },\r\n                withCredentials: true\r\n            }\r\n            )\r\n            await setData(response1.data)\r\n        }\r\n        fetchData()\r\n    }, [playlistId])\r\n\r\n    const playNext = (e: any) => {\r\n        if (e.target) {\r\n            var id = e.target.id;\r\n        }\r\n        let now = document.getElementById(id.toString())\r\n        let cur = now?.getAttribute('currentSrc')\r\n        now?.setAttribute('ended', 'false')\r\n        console.log(now);\r\n\r\n        console.log(cur);\r\n        now?.setAttribute('currentTime', '0')\r\n        console.log(cur);\r\n\r\n        id = Number(id) + 1;\r\n        let next = document.getElementById(id.toString())\r\n        next?.setAttribute('autoPlay', 'true')\r\n    }\r\n\r\n    const startPlaying = () => {\r\n        let first = document.getElementById(\"1\")\r\n        first?.setAttribute('autoPlay', 'true')\r\n    }\r\n\r\n    return (\r\n        <div><br /><br /><br /><br />\r\n            <Helmet><title>Плейлист: {data.name}</title></Helmet>\r\n            <h1>Playlist detail {playlistId}</h1>\r\n            {data.id}<br />\r\n            {data.name}<br />\r\n            {data.description}<br />\r\n            <button onClick={startPlaying}>Start playlist</button><br />\r\n            {data.tracks.map((track: track) => {\r\n                let trackId = '' + track.id.toString()\r\n                // production\r\n                let soundtrackSrc = track.soundtrack\r\n\r\n                // development\r\n                // let soundtrackSrc = 'http://localhost:8000' + track.soundtrack\r\n                return (<span key={track.id}>\r\n                    {track.title}: <ReactAudioPlayer\r\n                        id={trackId}\r\n                        onEnded={playNext}\r\n                        src={soundtrackSrc}\r\n                        controls\r\n                    /><br />\r\n                </span>\r\n                )\r\n            })}\r\n            <img src={\"http://localhost:8000\" + data.photo} alt={data.name} /><br />\r\n            {data.tracks.map((track: track) => {\r\n                // production\r\n                let imgSrc = track.cover\r\n\r\n                // development\r\n                // let imgSrc = 'http://localhost:8000' + track.cover\r\n                return (\r\n                    <span key={track.id}>\r\n                        <Link to={\"/track/\" + track.id}>{track.title}</Link><br />\r\n                        <img src={imgSrc} alt={track.title} />\r\n                    </span>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaylistDetail","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Helmet } from 'react-helmet'\r\n\r\ninterface art {\r\n    id: number,\r\n    nickname: string,\r\n    first_name: string,\r\n    last_name: string\r\n}\r\n\r\ninterface alb {\r\n    id: number,\r\n    name: string,\r\n    description: string,\r\n    cover: string,\r\n    artists_info: art[],\r\n}\r\n\r\nconst AlbumList = () => {\r\n    const [data, setData]: any[] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response1 = await axios(\r\n                'http://localhost:8000/api/albums/', {\r\n                headers: { 'Content-Type': 'application/json' },\r\n                withCredentials: true\r\n            }\r\n            )\r\n            await setData(response1.data)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Helmet>\r\n                <title>Альбомы</title>\r\n            </Helmet>\r\n            <br /><br /><br /><br />\r\n            <h1>Albums list</h1>\r\n            {data.map((album: alb) => {\r\n                // Production\r\n                let imgSrc = album.cover\r\n                // Development\r\n                // let imgSrc = 'http://localhost:8000' + album.cover\r\n                return (\r\n                    <div key={album.id}>\r\n                        <Link to={'/album/' + album.id}>{album.name}</Link><br />\r\n                        {album.artists_info.map((artist: art) => {\r\n                            return (\r\n                                <span key={artist.id}>\r\n                                    <Link to={'/artist/' + artist.id}>{artist.nickname}</Link>&nbsp;\r\n                                </span>\r\n                            )\r\n                        })}\r\n                        <p>{album.description}</p>\r\n                        <img src={imgSrc} alt={album.name} /><br />\r\n                    </div>\r\n                );\r\n\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlbumList;","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport ReactAudioPlayer from 'react-audio-player';\r\nimport { Helmet } from 'react-helmet'\r\n\r\ninterface art {\r\n    id: number,\r\n    nickname: string,\r\n}\r\n\r\ninterface trc {\r\n    id: number,\r\n    title: string,\r\n    cover: string,\r\n    soundtrack: string,\r\n}\r\n\r\ninterface alb {\r\n    id: number,\r\n    name: string,\r\n    description: string,\r\n    cover: string,\r\n    date_of_release: string,\r\n    artists_info: art[],\r\n    tracks_info: trc[],\r\n}\r\n\r\n\r\nconst AlbumDetail = (props: any) => {\r\n    const albumId = props.match.params.albumId;\r\n    const [data, setData] = useState<alb>();\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response1 = await axios(\r\n                'http://localhost:8000/api/albums/' + albumId, {\r\n                headers: { 'Content-Type': 'application/json' },\r\n                withCredentials: true\r\n            }\r\n            )\r\n            await setData(response1.data)\r\n        }\r\n        fetchData()\r\n    }, [albumId])\r\n\r\n    console.log(data);\r\n\r\n\r\n\r\n    if (typeof (data) !== 'undefined') {\r\n        // Production\r\n        let imgSrc = data.cover\r\n        // Development\r\n        // let imgSrc = 'http://localhost:8000' + data.cover\r\n        return (\r\n            <div>\r\n                <Helmet>\r\n                    <title>Альбомы: {data.name}</title>\r\n                </Helmet>\r\n                <br /><br /><br /><br />\r\n                {data.name}<br />\r\n                {data.description}<br />\r\n                {data.date_of_release}<br />\r\n                <img src={imgSrc} alt={data.name} /><br />\r\n                {data.artists_info.map((artist: art) => {\r\n                    return (\r\n                        <span key={artist.id}>\r\n                            <Link to={'/artist/' + artist.id}>{artist.nickname}</Link>&nbsp;\r\n                        </span>\r\n                    );\r\n                })}<br />\r\n                {data.tracks_info.map((track: trc) => {\r\n                    // Production\r\n                    let imgTrackSrc= track.cover\r\n                    let soundtrackSrc = track.soundtrack\r\n                    // Development\r\n                    // let imgSrc = 'http://localhost:8000' + track.cover\r\n                    // let soundtrackSrc = 'http://localhost:8000' + track.soundtrack\r\n                    return (\r\n                        <div key={track.id}>\r\n                            <Link to={'/track/' + track.id}><h5>{track.title}</h5></Link>\r\n                            <img src={imgTrackSrc} alt={track.title} height=\"100px\" width=\"100px\" />&nbsp;\r\n                            <ReactAudioPlayer controls src={soundtrackSrc} />\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    } else {\r\n        return (<div></div>)\r\n    }\r\n}\r\n\r\nexport default AlbumDetail;","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Helmet } from 'react-helmet'\r\n\r\ninterface art {\r\n    id: number,\r\n    nickname: string,\r\n    first_name: string,\r\n    last_name: string,\r\n    photo: string,\r\n}\r\n\r\nconst ArtistList = () => {\r\n    const [data, setData]: any = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response1 = await axios(\r\n                'http://localhost:8000/api/artists/', {\r\n                headers: { 'Content-Type': 'application/json' },\r\n                withCredentials: true\r\n            }\r\n            )\r\n            await setData(response1.data)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Helmet><title>Исполнители</title></Helmet>\r\n            <br /><br /><br /><br />\r\n            <h1>Artist list</h1>\r\n            {data.map((artist: art) => {\r\n                // Production\r\n                let imgSrc = artist.photo\r\n\r\n                // Development\r\n                // let imgSrc = 'http://localhost:8000'+artist.photo\r\n                return (\r\n                    <div key={artist.id}>\r\n                        <Link to={'/artist/' + artist.id}>{artist.first_name} \"{artist.nickname}\" {artist.last_name}</Link><br />\r\n                        <img src={imgSrc} alt={artist.nickname} height=\"200px\" width=\"200px\" />\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArtistList","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport ReactAudioPlayer from 'react-audio-player'\r\nimport { Helmet } from 'react-helmet'\r\n\r\ninterface alb {\r\n    id: number,\r\n    name: string,\r\n    date_of_release: string,\r\n    description: string,\r\n    cover: string,\r\n}\r\n\r\ninterface trc {\r\n    id: number,\r\n    title: string,\r\n    cover: string,\r\n    soundtrack: string,\r\n    date_of_release: string,\r\n}\r\n\r\ninterface art {\r\n    first_name: string,\r\n    nickname: string,\r\n    last_name: string,\r\n    date_of_birth: string,\r\n    photo: string,\r\n    tracks: trc[],\r\n    albums: alb[]\r\n}\r\n\r\nconst ArtistDetail = (props: any) => {\r\n    const artistId = props.match.params.artistId;\r\n    const [data, setData] = useState<art>()\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const response1 = await axios(\r\n                'http://localhost:8000/api/artists/' + artistId, {\r\n                headers: { 'Content-Type': 'application/json' },\r\n                withCredentials: true\r\n            }\r\n            )\r\n            await setData(response1.data)\r\n        }\r\n        fetchData()\r\n    }, [artistId])\r\n\r\n    console.log(data);\r\n\r\n    if (typeof (data) !== 'undefined') {\r\n        return (\r\n            <div>\r\n                <Helmet><title>Исполнитель: {data.nickname}</title></Helmet>\r\n                <br /><br /><br /><br />\r\n                <h1>Artist detail</h1>\r\n                {data.first_name} <strong>\"{data.nickname}\"</strong> {data.last_name}<br />\r\n                {data.date_of_birth}<br />\r\n                <img src={'http://localhost:8000' + data.photo} alt={data.nickname} height=\"300px\" width=\"300px\" /><br />\r\n                <h3>Треки:</h3>\r\n                {data.tracks.map((track: trc) => {\r\n                    // Production\r\n                    let imgSrc = track.cover\r\n                    let soundtrackSrc = track.soundtrack\r\n                    // Development\r\n                    // let imgSrc = 'http://localhost:8000' + track.cover\r\n                    // let soundtrackSrc = 'http://localhost:8000' + soundtrack.cover\r\n\r\n                    return (\r\n                        <div key={track.id}>\r\n                            <Link to={'/track/' + track.id}><h5>{track.title}</h5></Link>\r\n                            {track.date_of_release}<br />\r\n                            <img src={imgSrc} alt={track.title} height=\"100px\" width=\"100px\" />&nbsp;\r\n                            <ReactAudioPlayer controls src={soundtrackSrc} />\r\n                        </div>\r\n                    )\r\n                })}\r\n                <br /><br />\r\n                <h3>Альбомы:</h3>\r\n                {data.albums.map((album: alb) => {\r\n                    // Production\r\n                    let imgSrc = album.cover\r\n                    // Development\r\n                    // let imgSrc = 'http://localhost:8000' + album.cover\r\n\r\n                    return (\r\n                        <div key={album.id}>\r\n                            <Link to={'/album/' + album.id}><h4>{album.name}</h4></Link>\r\n                            {album.date_of_release}<br />\r\n                            <img src={imgSrc} alt={album.name} height=\"100px\" width=\"100px\" />&nbsp;\r\n                            <p>{album.description}</p>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    } else {\r\n        return (<div></div>)\r\n    }\r\n}\r\n\r\nexport default ArtistDetail","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from \"./Pages/Profile/Login\";\nimport Nav from \"./Components/Nav\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from \"./Pages/Home\";\nimport Register from \"./Pages/Profile/Register\";\nimport { Container } from '@material-ui/core'\nimport TrackDetail from \"./Pages/Tracks/TrackDetail\";\nimport TrackList from \"./Pages/Tracks/TrackList\";\nimport Profile from './Pages/Profile/Profile';\nimport GenreList from './Pages/Genres/GenreList';\nimport GenreDetail from './Pages/Genres/GenreDetail';\nimport PlaylistList from './Pages/Playlists/PlaylistList';\nimport PlaylistDetail from './Pages/Playlists/PlaylistDetail';\nimport AlbumList from './Pages/Albums/AlbumList'\nimport AlbumDetail from './Pages/Albums/AlbumDetail'\nimport ArtistList from './Pages/Artists/ArtistList';\nimport ArtistDetail from './Pages/Artists/ArtistDetail';\n\nfunction App() {\n    const [username, setUsername]: any = useState('')\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const response1 = await fetch(\n                'http://localhost:8000/user/profile', {\n                headers: { 'Content-Type': 'application/json' },\n                credentials: 'include'\n            }\n            )\n            const content = await response1.json()\n\n            if (response1.status === 200) {\n                await setUsername(content.username)\n            } else {\n                console.log(222)\n            }\n        }\n        fetchData()\n    }, [])\n\n\n    return (\n        <Router>\n            <div className=\"App\">\n                <Container>\n                    <Nav setUsername={setUsername} username={username} />\n                    <Switch>\n                        <Route path=\"/\" exact component={Home} />\n\n                        <Route path=\"/login/\" component={() => <Login setUsername={setUsername} />} />\n                        <Route path=\"/register/\" component={Register} />\n                        <Route path=\"/profile/\" component={Profile} />\n\n                        <Route path=\"/tracks/\" component={TrackList} />\n                        <Route path=\"/track/:trackId\" component={TrackDetail} />\n\n                        <Route path=\"/genres/\" component={GenreList} />\n                        <Route path=\"/genre/:genreId\" component={GenreDetail} />\n\n                        <Route path=\"/playlists/\" component={PlaylistList} />\n                        <Route path=\"/playlist/:playlistId\" component={PlaylistDetail} />\n\n                        <Route path=\"/albums/\" component={AlbumList} />\n                        <Route path=\"/album/:albumId\" component={AlbumDetail} />\n\n                        <Route path=\"/artists/\" component={ArtistList} />\n                        <Route path=\"/artist/:artistId\" component={ArtistDetail} />\n                    </Switch>\n                </Container>\n                <br />\n                <br />\n                <br />\n                <br />\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}